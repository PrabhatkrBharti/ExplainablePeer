Paper summary:\nExisting works on multi-task neural networks typically use hand-tuned weights for weighing losses across different tasks.  This work proposes a dynamic weight update scheme that updates weights for different task losses during training time by making use of the loss ratios of different tasks.  Experiments on two different network indicate that the proposed scheme is better than using hand-tuned weights for multi-task neural networks. \n\n\nPaper Strengths:\n- The proposed technique seems simple yet effective for multi-task learning. \n- Experiments on two different network architectures showcasing the generality of the proposed method. \n\n\nMajor Weaknesses:\n- The main weakness of this work is the unclear exposition of the proposed technique.  Entire technique is explained in a short section-3.1 with many important details missing.  There is no clear basis for the main equations 1 and 2.  How does equation-2 follow from equation-1? Where is the expectation coming from? What exactly does \u2018F\u2019 refer to? There is dependency of \u2018F\u2019 on only one of sides in equations 1 and 2? More importantly, how does the gradient normalization relate to loss weight update?  It is very difficult to decipher these details from the short descriptions given in the paper. \n- Also, several details are missing in toy experiments . What is the task here? What are input and output distributions and what is the relation between input and output? Are they just random noises? If so, is the network learning to overfit to the data as there is no relationship between input and output?  \n\n\nMinor Weaknesses:\n- There are no training time comparisons between the proposed technique and the standard fixed loss learning. \n- Authors claim that they operate directly on the gradients inside the network.  But, as far as I understood, the authors only update loss weights in this paper.  Did authors also experiment with gradient normalization in the intermediate CNN layers? \n- No comparison with state-of-the-art techniques on the experimented tasks and datasets. \n\n\nClarifications:\n- See the above mentioned issues with the exposition of the technique. \n- In the experiments, why are the input images downsampled to 320x320? \n- What does it mean by \u2018unofficial dataset\u2019 (page-4) . Any references here ?\n- Why is 'task normalized' test-time loss as good measure for comparison between models in the toy example (Section 4)?  The loss ratios depend on initial loss, which is not important for the final performance of the system. \n\n\nSuggestions:\n- I strongly suggest the authors to clearly explain the proposed technique to get this into a publishable state.  \n- The term \u2019GradNorm\u2019 seem to be not defined anywhere in the paper. \n\n\nReview Summary:\nDespite promising results, the proposed technique is quite unclear from the paper.  With its poor exposition of the technique, it is difficult to recommend this paper for publication.[[CLA-NEU],[JUS-NEU],[DEP-NEU],[FAI-NEU],[CON-NEU],[ENG-NEU],[ACC-NEU],[CST-NEU],[NOV-NEU],[ETH-NEU]]