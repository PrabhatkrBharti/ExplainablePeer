Summary of paper:\n\nThe paper proposes a unique network architecture that can learn divide-and-conquer strategies to solve algorithmic tasks. \n\nReview:\n\nThe paper is clearly written.  It is sometimes difficult to communicate ideas in this area, so I appreciate the author's effort in choosing good notation.  Using an architecture to learn how to split the input, find solutions, then merge these is novel.  Previous work in using recursion to solve problems (Cai 2017) used explicit supervision to learn how to split and recurse.  The ideas and formalism of the merge and partition operations are valuable contributions.   \n\nThe experimental side of the paper is less strong.   There are good results on the convex hull problem, which is promising.   There should also be a comparison to a k-means solver in the k-means section as an additional baseline.   I'm also not sure TSP is an appropriate problem to demonstrate the method's effectiveness.   Perhaps another problem that has an explicit divide and conquer strategy could be used instead.   It would also be nice to observe failure cases of the model.   This could be done by visually showing the partition constructed or seeing how the model learned to merge solutions.. \n\nThis is a relatively new area to tackle, so while the experiments section could be strengthened, I think the ideas present in the paper are important and worth publishing. \n\nQuestions:\n\n1. What is \\rho on page 4?.  I assume it is some nonlinearity, but this was not specified. \n2. On page 5, it says the merge block takes as input two sequences.  I thought the merge block was defined on sets?  \n\nTypos:\n1. Author's names should be enclosed in parentheses unless part of the sentence. \n2. I believe \"then\" should be removed in the sentence \"...scale invariance, then exploiting...\" on page 2.[[CLA-POS],[JUS-POS],[DEP-POS],[FAI-NEU],[CON-NEU],[ENG-NEU],[ACC-NEU],[CST-NEU],[NOV-NEU],[ETH-NEU]]