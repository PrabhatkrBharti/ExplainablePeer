This paper proposes an adaptation of the SEARN algorithm to RNNs for generating text.  In order to do so, they discuss various issues on how to scale the approach to large output vocabularies by sampling which actions the algorithm to explore. \n\nPros:\n- Good literature review.  But the future work on bandits is already happening: \nPaper accepted at ACL 2017: Bandit Structured Prediction for Neural Sequence-to-Sequence Learning. Julia Kreutzer, Artem Sokolov, Stefan Riezler. \n\n\nCons:\n- The key argument of the paper is that SEARNN is a better IL-inspired algorithm than the previously proposed ones.  However there is no direct comparison either theoretical or empirical against them.  In the examples on spelling using the dataset of Bahdanau et al. 2017, no comparison is made against their actor-critic method.  Furthermore, given its simplicity, I would expect a comparison against scheduled sampling. \n\n- A lot of important experimental details are in the appendices and they differ among experiments.  Finally, in the NMT comparison while it is stated that similar architecture is used in order to compare fairly against previous work, this is not the case eventually, as it is acknowledged at least in the case of MIXER.  I would have expected the same encoder-decoder architecture to have been used for all the methods considered. \n \n- the two losses introduced are not really new.  The log-loss is just MLE, only assuming that instead of a fixed expert that always returns the same target, we have a dynamic one.  Note that the notion of dynamic expert is present in the SEARN paper too.  Goldberg and Nivre just adapted it to transition-based dependency parsing.  Similarly, since the KL loss is the same as XENT, why give it a new name? \n\n- the top-k sampling method is essentially the same as the targeted exploration of Goodman et al. (2016) which the authors cite.  Thus it is not a novel contribution. \n  \n- Not sure I see the difference between the stochastic nature of SEARNN and the online one of LOLS mentioned in section 7.  They both could be mini-batched similarly.  Also, not sure I see why SEARNN can be used on any task, in comparison to other methods.  They all seem to be equally capable. \n\nMinor comments:\n- Figure 1: what is the difference between \"cost-sensitive loss\" and just \"loss\"? \n- local vs sequence-level losses: the point in Ranzato et al and Wiseman & Rush is that the loss they optimizise (BLEU/ROUGE) do not decompose over the the predictions of the RNNs. \n- Can't see why SEARNN can help with the vanishing gradient problem.  Seem to be rather orthogonal.\n[[CLA-POS],[JUS-POS],[DEP-POS],[FAI-POS],[CON-NEG],[ENG-POS],[ACC-POS],[CST-POS],[NOV-POS],[ETH-NEG]]